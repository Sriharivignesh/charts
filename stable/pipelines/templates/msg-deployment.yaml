{{- if not (.Values.rabbitmq.enabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pipelines.msg.name" . }}
  labels:
    app.kubernetes.io/name: {{ include "pipelines.name" . }}
    helm.sh/chart: {{ include "pipelines.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: {{ include "pipelines.msg.name" . }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pipelines.msg.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: {{ include "pipelines.msg.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pipelines.msg.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: {{ include "pipelines.msg.name" . }}
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/msg-configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print .Template.BasePath "/pipelines-secrets.yaml") . | sha256sum }}
        pod.beta.kubernetes.io/hostname: {{ include "pipelines.msg.name" . }}
    spec:
      serviceAccountName: {{ include "pipelines.fullname" . }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
    {{- end }}
      containers:
        - name: msg
          image: "{{ .Values.imageRegistry }}/{{ .Values.msg.image.repository }}:{{ default .Chart.AppVersion .Values.msg.image.tag }}"
          imagePullPolicy: {{ .Values.msg.image.pullPolicy }}
          ports:
            - containerPort: 30200
            - containerPort: 30201
          env:
            - name: RABBITMQ_NODENAME
              value: rabbitmq@localhost
            - name: RABBITMQ_DEFAULT_USER
              value: {{ .Values.msg.rabbitmqUsername  }}
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef: 
                  name: {{ default (include "pipelines.fullname" .) .Values.existingSecret }}
                  key: rabbitmq-password
          volumeMounts:
            - mountPath: /var/lib/rabbitmq/mnesia
              name: data-volume
            - mountPath: /etc/rabbitmq
              name: config-volume
      volumes:
        - name: data-volume
        {{- if .Values.msg.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "pipelines.fullname" . }}-msg
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: config-volume
          configMap:
            name: {{ include "pipelines.fullname" . }}-msg-config
      {{- with .Values.msg.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.msg.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.msg.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
