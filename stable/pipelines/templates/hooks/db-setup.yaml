apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "pipelines.fullname" . }}-db-setup-{{ randAlpha 6 | lower }}
  labels:
    app.kubernetes.io/name: {{ include "pipelines.name" . }}
    helm.sh/chart: {{ include "pipelines.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: postgresql
  annotations:
    "helm.sh/hook-weight": "1"
    "helm.sh/hook": post-install
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pipelines.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: postgresql
    spec:
      restartPolicy: OnFailure
      containers:
      - name: post-install-job
        image: "{{ .Values.pipelinesInit.image.repository }}:{{ default .Chart.AppVersion .Values.pipelinesInit.image.tag }}"
        imagePullPolicy: {{ .Values.pipelinesInit.image.pullPolicy }}
        env:
        {{- if .Values.postgresql.enabled }}
        - name: DB_IP
          value: {{ .Release.Name }}-postgresql
        - name: DBHOST
          value: {{ .Release.Name }}-postgresql
        - name: DB_PORT
          value: "{{ .Values.postgresql.service.port }}"
        - name: DBPORT
          value: "{{ .Values.postgresql.service.port }}"
        - name: DB_NAME
          value: {{ .Values.postgresql.postgresqlDatabase }}
        - name: DBNAME
          value: {{ .Values.postgresql.postgresqlDatabase }}
        - name: DB_USER
          value: {{ .Values.postgresql.postgresqlUsername }}
        - name: DBUSERNAME
          value: {{ .Values.postgresql.postgresqlUsername }}
        {{- else }}
        - name: DB_IP
          value: {{ .Values.global.postgresql.host }}
        - name: DBHOST
          value: {{ .Values.global.postgresql.host }}
        - name: DB_PORT
          value: "{{ .Values.global.postgresql.port }}"
        - name: DBPORT
          value: "{{ .Values.global.postgresql.port }}"
        - name: DB_NAME
          value: {{ .Values.global.postgresql.database }}
        - name: DBNAME
          value: {{ .Values.global.postgresql.database }}
        - name: DB_USER
          value: {{ .Values.global.postgresql.user }}
        - name: DBUSERNAME
          value: {{ .Values.global.postgresql.user }}
        {{- end }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "pipelines.fullname" . }}-api-secrets
              key: db-password
        - name: DBPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "pipelines.fullname" . }}-api-secrets
              key: db-password
        - name: API_TOKEN
          valueFrom:
            secretKeyRef: 
              name: {{ include "pipelines.fullname" . }}-api-secrets
              key: api-token
        - name: IMAGE_REGISTRY_URL
          value: {{ .Values.api.imageRegistry.url }}
        - name: RELEASE
          value: "{{ default .Chart.AppVersion .Values.api.image.tag }}"
        - name: INSTALLER_SCRIPTS_DIR
          value: /scripts
        - name: INSTALLER_LIB_DIR
          value: /scripts/lib
        - name: RUNTIME_DIR
          value: /tmp
        - name: CONFIG_DIR
          value: /tmp
        command:
        - '/bin/sh'
        - '-c'
        - >
          echo Prepare scripts;
          cp -fv /init-scripts/wait-for-db.sh /scripts;
          chmod +x /scripts/wait-for-db.sh;
          cp -fv /init-scripts/initializeDbK8s.sh /scripts;
          chmod +x /scripts/initializeDbK8s.sh;
          chmod +x /scripts/createServiceUserIdentity.sh;
          /scripts/wait-for-db.sh;
          echo Initialize install;
          /scripts/initializeDbK8s.sh;
          mkdir -p /tmp/logs;
          mkdir -p /tmp/db/data;
          /scripts/renderServiceUserIdentitySqlK8s.sh;
          /scripts/createServiceUserIdentity.sh;
        volumeMounts:
        - name: db-setup
          mountPath: "/init-scripts"
      volumes:
      - name: db-setup
        configMap:
          name: {{ include "pipelines.fullname" . }}-api-setup-scripts
