apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pipelines.steptrigger.name" . }}
  labels:
    app.kubernetes.io/name: {{ include "pipelines.name" . }}
    helm.sh/chart: {{ include "pipelines.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: {{ include "pipelines.steptrigger.name" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pipelines.steptrigger.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pipelines.steptrigger.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/components-config.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "pipelines.fullname" . }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
    {{- end }}
      initContainers:
        - name: wait-for-api
          image: "{{ .Values.initContainerImage }}"
          imagePullPolicy: {{ .Values.stepTrigger.image.pullPolicy }}
          command:
          - 'sh'
          - '-c'
          - >
            echo "Waiting for Pipelines API to come up...";
            until nc -z -w 2 {{ include "pipelines.api.name" . }} {{ .Values.api.service.port }} && echo API ok; do
              sleep 2;
            done;
    {{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.uid }}
        fsGroup: {{ .Values.securityContext.gid }}
    {{- end }}
      containers:
        - name: api
          image: "{{ .Values.imageRegistry }}/{{ .Values.stepTrigger.image.repository }}:{{ default .Chart.AppVersion .Values.stepTrigger.image.tag }}"
          imagePullPolicy: {{ .Values.stepTrigger.image.pullPolicy }}
          env:
            - name: COMPONENT
              value: stepTrigger
            - name: SHIPPABLE_API_TOKEN
              valueFrom:
                secretKeyRef: 
                  name: {{ default (include "pipelines.fullname" .) .Values.existingSecret }}
                  key: api-token 
          envFrom:
            - configMapRef:
                name: {{ include "pipelines.fullname" . }}-components-config
          workingDir: /shippable/micro/nod/stepTrigger
          resources:
            {{- toYaml .Values.stepTrigger.resources | nindent 12 }}
      {{- with .Values.stepTrigger.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.stepTrigger.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.stepTrigger.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
