
# Override values for pipelines.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Existing secret with Pipelines secrets
existingSecret: pipelines-external-secrets

# Pipelines micro-services
api:
  replicaCount: 1

  serviceId: jfpip@2019223311

  artifactory:
    url: https://artifactory.example.com
    username: admin

  rabbitMq:
    user: admin
    uiUser: adminui

  ingress:
    enabled: true
    annotations:
      certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/tls-acme: "true"
      ingress.kubernetes.io/force-ssl-redirect: "true"
      ingress.kubernetes.io/proxy-body-size: "0"
      ingress.kubernetes.io/proxy-read-timeout: "600"
      ingress.kubernetes.io/proxy-send-timeout: "600"
      kubernetes.io/ingress.class: nginx
      # nginx.ingress.kubernetes.io/whitelist-source-range: "1.2.3.4/32"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
    path: /
    hosts:
      - pipelines-api.example.com    
    tls:
      - secretName: pipelines-api.example.com
        hosts:
          - pipelines-api.example.com

www:
  replicaCount: 1

  image:
    repository: jfrog/pipelines-www
    # tag:
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 30001

  ingress:
    enabled: true
    annotations:
      certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/tls-acme: "true"
      ingress.kubernetes.io/force-ssl-redirect: "true"
      ingress.kubernetes.io/proxy-body-size: "0"
      ingress.kubernetes.io/proxy-read-timeout: "600"
      ingress.kubernetes.io/proxy-send-timeout: "600"
      kubernetes.io/ingress.class: nginx
      # nginx.ingress.kubernetes.io/whitelist-source-range: "1.2.3.4/32"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
    path: /
    hosts:
      - pipelines.example.com    
    tls:
      - secretName: pipelines.example.com
        hosts:
          - pipelines.example.com

# PostgreSQL
postgresql:
  ## PostgreSQL password using existing secret
  existingSecret: pipelines-external-secrets

# RabbitMQ
msg:

  # LoadBalancer to access RabbitMQ by Node-pool VMs
  serviceLB:

    annotations:
    # Set internal LB for GCP
      cloud.google.com/load-balancer-type: "Internal"

    # Set LB static IP
    loadBalancerIP:

    # Whitelist IPs allowed to LoadBalancer type services
    # Example: loadBalancerSourceRanges={82.82.190.51/32,141.141.8.8/32}
    loadBalancerSourceRanges: []

  rabbitmqUsername: guest
  rabbitmqNodePort: 30200
  rabbitmqAdminNodePort: 30201

  ingress:
    enabled: true
    annotations:
      certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/tls-acme: "true"
      ingress.kubernetes.io/force-ssl-redirect: "true"
      ingress.kubernetes.io/proxy-body-size: "0"
      ingress.kubernetes.io/proxy-read-timeout: "600"
      ingress.kubernetes.io/proxy-send-timeout: "600"
      kubernetes.io/ingress.class: nginx
      # nginx.ingress.kubernetes.io/whitelist-source-range: "1.2.3.4/32"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
    
    path: /
    hosts:
      - "pipelines-msg.example.com" 
    tls:
      - secretName: "pipelines-msg.example.com"
        hosts:
          - "pipelines-msg.example.com"
